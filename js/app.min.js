jQuery(document).ready(function ($) {
    const htmlElement = document.querySelector("html");
    const header = document.querySelector(".header");
    const menuToggleButton = document.querySelector(".header-wrap__icon");
    const navigationMenu = document.querySelector(".header-wrap__nav");
    const allLinks = document.querySelectorAll("a");
    const sidebarItems = document.querySelectorAll(".page-wrap__sidebar .item");
    const faqItems = $(".faq-wrap__list .item-top");
    const serviceList = $(".services-wrap__list");
    const FIXED_HEADER_HEIGHT = 50; // Adjust this to match your header height
    const SCROLL_OFFSET = FIXED_HEADER_HEIGHT + 10; // Add an extra buffer of 10px
    let isScrollingManually = false;

    // Sticky header logic
    function handleStickyHeader() {
        if (window.scrollY > 50) {
            header.classList.add("header-sticky");
        } else {
            header.classList.remove("header-sticky");
        }
    }

    // Smooth scrolling for anchor links
    document.querySelectorAll('a[href*="#"]').forEach((anchor) => {
        anchor.addEventListener("click", (event) => {
            const targetId = anchor.getAttribute("href").substring(1);
            const targetElement = document.getElementById(targetId);
    
            if (targetElement) {
                event.preventDefault();
                isScrollingManually = true; // Set manual scroll flag
    
                // Calculate the position of the target element
                const offsetPosition =
                    targetElement.getBoundingClientRect().top + window.scrollY - FIXED_HEADER_HEIGHT;
                
                // Apply extra margin only for block3
                if (targetId === "block3") {
                    // Scroll to block3 with an additional offset (e.g., -20px)
                    window.scrollTo({
                        top: offsetPosition - 110, // Adjust this value if needed
                        behavior: "smooth",
                    });
                } else {
                    // Normal scroll behavior for other blocks
                    window.scrollTo({
                        top: offsetPosition,
                        behavior: "smooth",
                    });
                }
    
                // Temporarily disable scroll listener updates
                setTimeout(() => {
                    isScrollingManually = false;
                    updateActiveSidebarItem(); // Ensure correct item is active
                }, 500);
            }
        });
    });
    
    

    // FAQ toggle functionality
    if (faqItems.length) {
        faqItems.click(function () {
            const item = $(this).closest(".item");
            item.toggleClass("open");
            item.find(".item-text").slideToggle();
        });
    }

    // Highlight active sidebar item based on the element at the top of the screen
    function updateActiveSidebarItem() {
        if (isScrollingManually) return; // Skip updating during manual scrolling
    
        if (sidebarItems.length > 0) {
            sidebarItems.forEach((item) => {
                const targetId = item.getAttribute("href").slice(1);
                const targetElement = document.getElementById(targetId);
    
                if (targetElement) {
                    let elementTop = targetElement.getBoundingClientRect().top;
    
                    // Apply a special offset for #block3
                    if (targetId === "block3") {
                        // Apply extra offset for block3
                        elementTop -= 110;  // Adjust this value as needed
                    }
    
                    // Check if the element's top is near the top of the viewport, considering header height
                    if (elementTop >= -SCROLL_OFFSET && elementTop <= SCROLL_OFFSET) {
                        sidebarItems.forEach((item) => item.classList.remove("active"));
                        item.classList.add("active");
                    }
                }
            });
        }
    }
    

    // Scroll listener for sticky header and sidebar updates
    window.addEventListener("scroll", () => {
        handleStickyHeader();
        updateActiveSidebarItem();
    });

    // Initialize sticky header and sidebar highlighting
    handleStickyHeader();
    updateActiveSidebarItem();
});
